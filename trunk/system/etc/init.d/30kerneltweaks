#!/system/bin/sh.old
# Give us props if you use any of our stuff
# follow good open source etiquette
# thanks from Team Synergy
# 
#######################
#Tuning System Variables
#######################
SYNERGYROM=1;
busybox mount -o remount,rw -t auto /system;
busybox mount -o remount,rw -t auto /data;
export LOG_FILE=/cache/dcboot.log;
export dirty_expire_centisecs=`getprop dc.adv.dirtyexpire`;
export dirty_writeback_centisecs=`getprop dc.adv.dirtywriteback`;
export dirty_background_ratio=`getprop dc.adv.dirtybg`;
export dirty_ratio=`getprop dc.adv.dirtyratio`;
export sampling_rate=`getprop dc.adv.samplerate`;
export up_threshold=`getprop dc.adv.upthreshold`;
export laptop_mode=`getprop dc.adv.laptopmode`;
export cache_pressure=`getprop dc.adv.cachepressure`;
export oom_kill=`getprop dc.adv.oomkill`;
export page_cluster=3;
export intswapping=true;
export dalvikheap=`getprop dc.dalvik.heapsize`;
export READ_AHEAD_KB=`getprop dc.adv.read_ahead_kb`;

if [ $dalvikheap = "16m" ]; 
then
	echo "[!] Setting Dalvik VM Heapsize to 16mb." | tee -a $LOG_FILE;
	setprop dalvik.vm.heapsize 16m;
fi;
if [ $dalvikheap = "24m" ]; 
then
	echo "[!] Setting Dalvik VM Heapsize to 24mb." | tee -a $LOG_FILE;
	setprop dalvik.vm.heapsize 24m;
fi;
if [ $dalvikheap = "32m" ]; 
then
	echo "[!] Setting Dalvik VM Heapsize to 32mb." | tee -a $LOG_FILE;
	setprop dalvik.vm.heapsize 32m;
fi;
if [ $dalvikheap = "48m" ]; 
then
	echo "[!] Setting Dalvik VM Heapsize to 48mb." | tee -a $LOG_FILE;
	setprop dalvik.vm.heapsize 48m;
fi;

echo "[!] Setting Advanced System Variables." | tee -a $LOG_FILE;
if [ -n ${page_cluster} ];
	then echo ${page_cluster} > /proc/sys/vm/page-cluster;
fi;

if [ -n ${dirty_expire_centisecs} ];
	then echo ${dirty_expire_centisecs} > /proc/sys/vm/dirty_expire_centisecs;
fi; 

if [ -n ${dirty_writeback_centisecs} ];
	then echo ${dirty_writeback_centisecs} > /proc/sys/vm/dirty_writeback_centisecs;
fi;

if [ -n ${dirty_background_ratio} ];
	then echo ${dirty_background_ratio} > /proc/sys/vm/dirty_background_ratio; 
fi;

if [ -n ${dirty_ratio} ];
	then echo ${dirty_ratio} > /proc/sys/vm/dirty_ratio;
fi;

if [ -n ${up_threshold} ];
	then echo ${up_threshold} > /sys/devices/system/cpu/cpu0/cpufreq/ondemand/up_threshold;
fi;

if [ -n ${sampling_rate} ];
	then echo ${sampling_rate} > /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate;
fi;

if [ -n ${cache_pressure} ];
	then echo ${cache_pressure} > /proc/sys/vm/vfs_cache_pressure;
fi;

if [ -n $laptop_mode ] &&  [ $laptop_mode = "true" ]; 
then
	echo 5 > /proc/sys/vm/laptop_mode;
else
	echo 0 > /proc/sys/vm/laptop_mode;
fi;

if [ -n $oom_kill ] && [ $oom_kill = "true" ]; 
then
	echo 1 > /proc/sys/vm/oom_kill_allocating_task;
else
	echo 0 > /proc/sys/vm/oom_kill_allocating_task;
fi;


if [ -e /sys/devices/virtual/bdi/179:0/read_ahead_kb ]; then
    echo ${READ_AHEAD_KB} > /sys/devices/virtual/bdi/179:0/read_ahead_kb;
    echo "SD card read ahead kb SET to $READ_AHEAD_KB";
fi;

# Set io scheduler tweaks for mtdblocks and mmc
for i in `ls -1 /sys/block/mtdblock*` /sys/block/mmcblk0
do
	echo "noop" > $i/queue/scheduler;
	echo "0" > $i/queue/rotational;
	echo "512" > $i/queue/nr_requests;
done;

echo 1 > /sys/block/mmcblk0/queue/rotational

#powersave bias-is this in dconfig yet?
echo 0 > /sys/devices/system/cpu/cpu0/cpufreq/ondemand/powersave_bias;

# TWEAKS: for TCP read/write
echo "4096 16384 404480" > /proc/sys/net/ipv4/tcp_wmem;
echo "4096 87380 404480" > /proc/sys/net/ipv4/tcp_rmem;

#Demon Voices Audio fix. Make this a dconfig option
#setprop media.stagefright.enable-player false;

setprop ro.telephony.call_ring.delay 0;
setprop ring.delay 0;
setprop wifi.supplicant_scan_interval 180;
setprop windowsmgr.max_events_per_sec 100;
setprop windowsmgr.support_rotation_270 true;
setprop ro.HOME_APP_ADJ 1;
setprop ro.HOME_APP_MEM 2048;
setprop ro.ril.hsxpa 1;
setprop ro.ril.gprsclass 10;
setprop dalvik.vm.startheapsize 10m;

echo "[ ] Here are values we are using" | tee -a $LOG_FILE;
ActivePageCluster=`cat /proc/sys/vm/page-cluster`; 
ActiveLaptopMode=`cat /proc/sys/vm/laptop_mode`; 
ActiveDirtyExpire=`cat /proc/sys/vm/dirty_expire_centisecs`; 
ActiveDirtyWriteback=`cat /proc/sys/vm/dirty_writeback_centisecs`; 
ActiveDirtyBackground=`cat /proc/sys/vm/dirty_background_ratio`; 
ActiveDirtyRatio=`cat /proc/sys/vm/dirty_ratio`; 
ActiveUpThreshold=`cat /sys/devices/system/cpu/cpu0/cpufreq/ondemand/up_threshold`; 
ActiveSamplingRate=`cat /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate`; 
ActiveOOMKill=`cat /proc/sys/vm/oom_kill_allocating_task`; 
ActiveVFSCache=`cat /proc/sys/vm/vfs_cache_pressure`;
busybox echo -e "SynergyKingdom Kernel Settings -\nPageCluster: $ActivePageCluster \nLaptopMode: $ActiveLaptopMode \nDirtyExpire: $ActiveDirtyExpire \nDirtyWriteback: $ActiveDirtyWriteback \nDirtyBackground: $ActiveDirtyBackground \nDirtyRatio: $ActiveDirtyRatio \nUpThreshold: $ActiveUpThreshold \nSamplingRate: $ActiveSamplingRate \nOOMKill: $ActiveOOMKill \nVFSCache: $ActiveVFSCache \n" | tee -a $LOG_FILE;

SystemAvailable=`busybox df -h | grep mtdblock4 | awk '{print $4}'`;
DataAvailable=`busybox df -h | grep mtdblock6 | awk '{print $4}'`;
CacheAvailable=`busybox df -h | grep mtdblock5 | awk '{print $4}'`; 
busybox echo -e "SynergyKingdom FreeSpace -\nSystem: $SystemAvailable \nData:   $DataAvailable \nCache:  $CacheAvailable" | tee -a $LOG_FILE;